version: '3.9'
services:
  userapp-redis:
    image: redis:6.0-alpine
    container_name: userapp-redis
    restart: always
    command: redis-server --requirepass abc
    networks:
      - userapp
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
  userapp-mysql:
    restart: always
    image: mysql:5.7
    container_name: userapp-mysql
    volumes:
      - type: bind
        source: ./scripts/mysql/
        target: /docker-entrypoint-initdb.d/
    networks:
      - userapp
    environment:
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      timeout: 2s
      retries: 30
    ports:
      - 3306:3306
  userapp-shadow:
    restart: always
    image: mysql:5.7
    container_name: userapp-shadow
    volumes:
      - type: bind
        source: ./scripts/shadow/
        target: /docker-entrypoint-initdb.d/
    networks:
      - userapp
    environment:
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      timeout: 2s
      retries: 30
    ports:
      - 3307:3306
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    networks:
      - userapp
#    ports:
#      - "2181:2181"                 ## 对外暴露的端口号
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    networks:
      - userapp
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_RETENTION_HOURS: 120
      KAFKA_MESSAGE_MAX_BYTES: 10000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10000000
      KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 60000
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DELETE_RETENTION_MS: 1000
    depends_on:
      - zookeeper
  kafka-manager:
    image: sheepkiller/kafka-manager
    container_name: kafka-manager
    depends_on:
      - kafka
    networks:
      - userapp
    environment:
      ZK_HOSTS: zookeeper
    ports:
      - "9009:9000"
networks:
  userapp:
    name: userapp